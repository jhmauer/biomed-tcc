########################################################################
# Script para teste de associação (GWAS) utilizando plink2
# Jessica Mauer
# Data: 15/06/2019
# PLINK v2.00a2LM 64-bit Intel (27 May 2019) 
# Input: arquivo plink2 ou plink1.9 apos QC (.pgen .psam .pvar ou .bed .bim .fam), arquivo .eigenvec contendo os 4 (ou mais) primeiros PCs
# Importante: ao utilizar o input do plink1.9, substituir --pfile por --bfile
# Output: Graficos manhattan e qq em formato .png, tabela com 100 primeiros SNPs em formato .csv
########################################################################

# Calculando pca
plink2 --pfile arquivo --pca 4 --out arquivo_pca

#associacao bruta (sem correção p/ pca)
plink2 --pfile arquivo --glm --out assoc_bruta

#Associação corrigindo para múltiplas comparações e também para os 4 primeiros PCs 
#(mudar os numeros do parametro covar-col-nums de acordo com a posiçao dos PCs no .eigenvec)

plink2 --pfile arquivo --adjust --covar arquivo_pca.eigenvec --covar-col-nums 3-6 --glm --out assoc_corrigida

#Selecionar do arquivo gerado o cabeçalho + linhas que tenham os resultados dos SNPs (coluna TEST = ADD)

egrep '#|ADD' assoc_corrigida.PHENO1.glm.logistic > assoc_SNPs.PHENO1.glm.logistic

##### GRÁFICOS - R ######################################################
# R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
# Importante: Para outputs gerados a partir do plink 2.0
#######################################################################
#importar o arquivo
corrigido <- read.table("assoc_SNPs.PHENO1.glm.logistic", header = T, comment.char = "@")
bruto <-  read.table("assoc_bruta.PHENO1.glm.logistic", header = T, comment.char = "@")

#renomear colunas
names(corrigido)[1] <- "CHR"
names(corrigido)[2] <- "BP"
names(bruto)[1] <- "CHR"
names(bruto)[2] <- "BP"

library(qqman) 

#QQ  Plot

png("qq_bruto_P.png")
qq(bruto$P)
dev.off()

png("qq_corrigido_P.png")
qq(corrigido$P)
dev.off()

#Manhattan plot

png("manhattan_corrigido_P.png")
manhattan(corrigido, main = 'Manhattan Plot', col = c('indianred', 'indianred4'), cex.axis = 0.8, ylim = c(0, 10))
dev.off()

###### Selecionar os 100 primeiros SNPs pelo valor de P ##########

library(dplyr)
resultadoordenado <- arrange(corrigido, P)

#Selecionar, os 100 primeiros snps e salvar em uma tabela

topsnps <- slice(resultadoordenado, 1:100)
write.csv2(topsnps, "top100snps.csv", row.names=F)
